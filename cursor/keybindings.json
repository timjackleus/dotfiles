[
  // I'm actually using <leader>e to toggle the sidebar, but when it's focused I'm uanble to trigger it from the nvim config
  {
    "key": "e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "explorerViewletFocus || filesExplorerFocus"
  },
  // toggle terminal
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  // backwards in jumplist
  {
    "key": "ctrl+o",
    "command": "workbench.action.quickInputBack",
    "when": "inQuickOpen"
  },
  // forward in jumplist
  {
    "key": "ctrl+i",
    "command": "workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  // back and forth in jumplist
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditor",
    "when": "!inQuickOpen"
  },
  {
    "key": "ctrl+a",
    "command": "workbench.panel.aichat.view.toggleVisibility"
  },
  // Explorer -> Editor
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "explorerViewletFocus || filesExplorerFocus"
  },
  // Editor -> Explorer
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusSideBar",
    "when": "editorTextFocus"
  },
  // Editor -> Terminal
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.focus",
    "when": "editorTextFocus"
  },
  // Terminal -> Editor
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "terminalFocus"
  },
  // Editor -> Chat
  {
    "key": "ctrl+l",
    "command": "workbench.panel.aichat.view.focus",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+shift+u",
    "command": "filesExplorer.openFilePreserveFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },
  // open right sidebar, not possible to close while input is focused...
  {
    "key": "ctrl+a",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+shift+a",
    "command": "aichat.insertselectionintochat"
  },
  // close sidebar when file is opened
  {
    "key": "enter",
    "command": "runCommands",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus",
    "args": {
      "commands": [
        "explorer.openAndPassFocus",
        "workbench.action.focusActiveEditorGroup",
        "workbench.action.toggleSidebarVisibility"
      ]
    }
  },
  // disabled mappings
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "alt+cmd+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "shift+cmd+l",
    "command": "-aichat.insertselectionintochat"
  },
  {
    "key": "ctrl+a",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.a && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+r ctrl+a",
    "command": "-vscode-neovim.send-cmdline",
    "when": "neovim.init && neovim.mode == 'cmdline'"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-cursorLineStartSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+a",
    "command": "-cursorLineStart",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+a",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.a && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.quickInputBack",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
]